
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:29:48 GMT 2016 ///

/// interface java.util.concurrent.Executor ///

public protocol Executor: JavaProtocol {

    /// public abstract void java.util.concurrent.Executor.execute(java.lang.Runnable)

    func execute( arg0: java_lang.Runnable? )
    func execute( _ _arg0: java_lang.Runnable? )

}

open class ExecutorForward: JNIObjectForward, Executor {

    private static var ExecutorJNIClass: jclass?

    /// public abstract void java.util.concurrent.Executor.execute(java.lang.Runnable)

    private static var execute_MethodID_2: jmethodID?

    open func execute( arg0: java_lang.Runnable? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "execute", methodSig: "(Ljava/lang/Runnable;)V", methodCache: &ExecutorForward.execute_MethodID_2, args: &__args, locals: &__locals )
    }

    open func execute( _ _arg0: java_lang.Runnable? ) {
        execute( arg0: _arg0 )
    }

}


