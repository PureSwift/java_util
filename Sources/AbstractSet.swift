
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:30:12 GMT 2016 ///

/// class java.util.AbstractSet ///

open class AbstractSet: AbstractCollection, JavaSet {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.util.AbstractSet", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AbstractSetJNIClass: jclass?

    /// protected java.util.AbstractSet()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/util/AbstractSet", classCache: &AbstractSet.AbstractSetJNIClass, methodSig: "()V", methodCache: &AbstractSet.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public boolean java.util.AbstractSet.equals(java.lang.Object)

    /// public int java.util.AbstractSet.hashCode()

    /// public boolean java.util.AbstractSet.removeAll(java.util.Collection)

    /// In declared protocol but not defined.. ///

    /// public abstract boolean java.util.Collection.removeAll(java.util.Collection)

    /// public abstract boolean java.util.Collection.contains(java.lang.Object)

    /// public abstract boolean java.util.Collection.containsAll(java.util.Collection)

    /// public abstract int java.util.Collection.size()

    /// public abstract java.util.Iterator java.lang.Iterable.iterator()

    /// public abstract boolean java.util.Collection.retainAll(java.util.Collection)

    /// public abstract boolean java.util.Collection.equals(java.lang.Object)

    /// public abstract java.lang.Object[] java.util.Collection.toArray()

    /// public abstract void java.util.Collection.clear()

    /// public abstract boolean java.util.Collection.remove(java.lang.Object)

    /// public abstract boolean java.util.Collection.isEmpty()

    /// public abstract java.lang.Object[] java.util.Collection.toArray(java.lang.Object[])

    /// public abstract boolean java.util.Collection.add(java.lang.Object)

    /// public abstract int java.util.Collection.hashCode()

    /// public abstract boolean java.util.Collection.addAll(java.util.Collection)

}
