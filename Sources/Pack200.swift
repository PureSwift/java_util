
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:29:53 GMT 2016 ///

/// class java.util.jar.Pack200 ///

open class Pack200: java_lang.JavaObject {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.util.jar.Pack200", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var Pack200JNIClass: jclass?

    /// private static final java.lang.String java.util.jar.Pack200.PACK_PROVIDER

    /// private static final java.lang.String java.util.jar.Pack200.UNPACK_PROVIDER

    /// private static java.lang.Class java.util.jar.Pack200.packerImpl

    /// private static java.lang.Class java.util.jar.Pack200.unpackerImpl

    /// private java.util.jar.Pack200()

    /// private static synchronized java.lang.Object java.util.jar.Pack200.newInstance(java.lang.String)

    /// public static synchronized java.util.jar.Pack200$Packer java.util.jar.Pack200.newPacker()

    private static var newPacker_MethodID_1: jmethodID?

    open class func newPacker() -> /* java.util.jar.Pack200$Packer */ UnclassedProtocol! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/util/jar/Pack200", classCache: &Pack200JNIClass, methodName: "newPacker", methodSig: "()Ljava/util/jar/Pack200$Packer;", methodCache: &newPacker_MethodID_1, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* java.util.jar.Pack200$Packer */ UnclassedProtocolForward( javaObject: __return ) : nil
    }


    /// public static java.util.jar.Pack200$Unpacker java.util.jar.Pack200.newUnpacker()

    private static var newUnpacker_MethodID_2: jmethodID?

    open class func newUnpacker() -> /* java.util.jar.Pack200$Unpacker */ UnclassedProtocol! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/util/jar/Pack200", classCache: &Pack200JNIClass, methodName: "newUnpacker", methodSig: "()Ljava/util/jar/Pack200$Unpacker;", methodCache: &newUnpacker_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* java.util.jar.Pack200$Unpacker */ UnclassedProtocolForward( javaObject: __return ) : nil
    }


}
