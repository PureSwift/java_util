
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:29:43 GMT 2016 ///

/// interface java.util.Formattable ///

public protocol Formattable: JavaProtocol {

    /// public abstract void java.util.Formattable.formatTo(java.util.Formatter,int,int,int)

    func formatTo( arg0: Formatter?, arg1: Int, arg2: Int, arg3: Int )
    func formatTo( _ _arg0: Formatter?, _ _arg1: Int, _ _arg2: Int, _ _arg3: Int )

}

open class FormattableForward: JNIObjectForward, Formattable {

    private static var FormattableJNIClass: jclass?

    /// public abstract void java.util.Formattable.formatTo(java.util.Formatter,int,int,int)

    private static var formatTo_MethodID_2: jmethodID?

    open func formatTo( arg0: Formatter?, arg1: Int, arg2: Int, arg3: Int ) {
        var __args = [jvalue]( repeating: jvalue(), count: 4 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        __args[3] = JNIType.encode( value: arg3, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "formatTo", methodSig: "(Ljava/util/Formatter;III)V", methodCache: &FormattableForward.formatTo_MethodID_2, args: &__args, locals: &__locals )
    }

    open func formatTo( _ _arg0: Formatter?, _ _arg1: Int, _ _arg2: Int, _ _arg3: Int ) {
        formatTo( arg0: _arg0, arg1: _arg1, arg2: _arg2, arg3: _arg3 )
    }

}


