
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:29:50 GMT 2016 ///

/// interface java.util.concurrent.ThreadFactory ///

public protocol ThreadFactory: JavaProtocol {

    /// public abstract java.lang.Thread java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable)

    func newThread( arg0: java_lang.Runnable? ) -> java_lang.Thread!
    func newThread( _ _arg0: java_lang.Runnable? ) -> java_lang.Thread!

}

open class ThreadFactoryForward: JNIObjectForward, ThreadFactory {

    private static var ThreadFactoryJNIClass: jclass?

    /// public abstract java.lang.Thread java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable)

    private static var newThread_MethodID_2: jmethodID?

    open func newThread( arg0: java_lang.Runnable? ) -> java_lang.Thread! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "newThread", methodSig: "(Ljava/lang/Runnable;)Ljava/lang/Thread;", methodCache: &ThreadFactoryForward.newThread_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_lang.Thread( javaObject: __return ) : nil
    }

    open func newThread( _ _arg0: java_lang.Runnable? ) -> java_lang.Thread! {
        return newThread( arg0: _arg0 )
    }

}


